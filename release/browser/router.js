var Router=function(t){"use strict";class e extends class{static getInstance(){return this.instance||(this.instance=new this),this.instance}}{constructor(){super(),this.routes=[],this.fallback=null}static on(t,n){if(2!==arguments.length)throw new Error("Expected two arguments.");if("string"!=typeof t)throw new TypeError("First argument is not a string.");if("function"!=typeof n)throw new TypeError("Second argument is not a function.");e.getInstance().routes.push({callback:n,pattern:t})}static start(){if(0!==arguments.length)throw new Error("Expected no arguments.");const t=()=>{const t=window.location.pathname,n=/:(?<placeholder>[a-zA-Z]+)/gu;let r=!1;for(const{pattern:o,callback:s}of e.getInstance().routes){const e=new RegExp(`^${o.replace(n,"(?<$1>[a-zA-Z0-9]+)")}$`,"u");if(e.test(t)){s(e.exec(t).groups),r=!0;break}}r||null===e.getInstance().fallback||e.getInstance().fallback()};window.addEventListener("popstate",t),t()}static goToPage(t){if(1!==arguments.length)throw new Error("Expected one argument.");if("string"!=typeof t)throw new TypeError("First argument is not a string.");if(!window.history)throw new ReferenceError("This browser does not support the History API.");window.history.pushState(null,null,t),window.dispatchEvent(new window.CustomEvent("popstate"))}static onPageNotFound(t){if(1!==arguments.length)throw new Error("Expected one argument.");if("function"!=typeof t)throw new TypeError("First argument is not a function.");e.getInstance().fallback=t}}return t.Router=e,t}({});
